<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="weeklyTriggerPage.Text" xml:space="preserve">
    <value>Установка триггера загрузок!</value>
  </data>
  <data name="durationLabel.Text" xml:space="preserve">
    <value>на срок:!</value>
  </data>
  <data name="oneTimeTriggerPage.Text" xml:space="preserve">
    <value>Установка одного триггера времени!</value>
  </data>
  <data name="openFileDialog1.Filter" xml:space="preserve">
    <value>Общо файлове</value>
  </data>
  <data name="triggerSelectPage.Text" xml:space="preserve">
    <value>Выберите, какие триггеры задачу!</value>
  </data>
  <data name="summaryPrompt.Text" xml:space="preserve">
    <value>При нажатии кнопки Готово, Новая задача будет создан и добавлен график вашей Windows.!</value>
  </data>
  <data name="summaryPage.Text" xml:space="preserve">
    <value>Выводы</value>
  </data>
  <data name="msgActionPage.Text" xml:space="preserve">
    <value>Настройка сообщения для отображения!</value>
  </data>
  <data name="openDlgAfterCheck.Text" xml:space="preserve">
    <value>Откройте диалоговое окно свойств для этой задачи, нажимая готово!</value>
  </data>
  <data name="oneTimeStartLabel.Text" xml:space="preserve">
    <value>Начало</value>
  </data>
  <data name="repeatCheckBox.Text" xml:space="preserve">
    <value>Повторять задачу каждые:!</value>
  </data>
  <data name="taskLocalOnlyCheck.Text" xml:space="preserve">
    <value>Не следует хранить пароль. Задача будет только иметь доступ к ресурсам локального компьютера.!</value>
  </data>
  <data name="dailyTriggerPage.Text" xml:space="preserve">
    <value>Установка триггера ежедневно!</value>
  </data>
  <data name="taskUserAcctLabel.Text" xml:space="preserve">
    <value>При выполнении задачи, используйте следующую учетную запись:!</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Имя задачи</value>
  </data>
  <data name="changePrincipalButton.Text" xml:space="preserve">
    <value>Изменить пользователя или группу...!</value>
  </data>
  <data name="runActionPage.Text" xml:space="preserve">
    <value>Настройка программы для запуска!</value>
  </data>
  <data name="introPage.Text" xml:space="preserve">
    <value>создать задачу</value>
  </data>
  <data name="emailActionPage.Text" xml:space="preserve">
    <value>Настройка сообщения электронной почты, чтобы отправить!</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="taskLoggedOnRadio.Text" xml:space="preserve">
    <value>Запустите, только когда пользователь вошел в систему!</value>
  </data>
  <data name="wizardControl1.Title" xml:space="preserve">
    <value>Создайте задачи мастер!</value>
  </data>
  <data name="onEventTriggerPage.Text" xml:space="preserve">
    <value>Настроить триггер на событие системы!</value>
  </data>
  <data name="triggerPropPage.Text" xml:space="preserve">
    <value>Свойства триггера!</value>
  </data>
  <data name="secOptPage.Text" xml:space="preserve">
    <value>Настройки безопасности</value>
  </data>
  <data name="taskLoggedOptionalRadio.Text" xml:space="preserve">
    <value>Запуск, ли пользователь вошел в систему или нет!</value>
  </data>
  <data name="enabledCheckBox.Text" xml:space="preserve">
    <value>Включено</value>
  </data>
  <data name="actionSelectPage.Text" xml:space="preserve">
    <value>Выберите действие для выполнения!</value>
  </data>
  <data name="monthlyTriggerPage.Text" xml:space="preserve">
    <value>Установка триггера ежемесячно!</value>
  </data>
</root>